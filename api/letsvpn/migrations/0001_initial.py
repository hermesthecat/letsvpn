# Generated by Django 3.2.7 on 2021-09-13 20:08

import api.models.uuid
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


def create_settings(apps, schema_editor):
    """
    Creates a profile for every existing user.
    Any models referenced muse by through apps.get_model(APP<str>, MODEL<str>)
    If you import the models directly, you'll get the wrong version and the migration will fail.

    @param apps The installed apps this migration references
    @param schema_editor The current schema this migration references
    """
    GlobalSettings = apps.get_model("letsvpn", "GlobalSettings")

    db_alias = schema_editor.connection.alias
    GlobalSettings.objects.using(db_alias).bulk_create([GlobalSettings()])


def delete_settings():
    """
    This function doesn't need to do anything, since reversing this migration would drop the table.
    """
    pass


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GlobalSettings',
            fields=[
                ('id', api.models.uuid.UUIDField(default=api.models.uuid.gen_uuid, editable=False, max_length=8, primary_key=True, serialize=False, unique=True)),
                ('autogen_config', models.BooleanField(default=True, verbose_name='Auto-generate Wireguard Configs')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WireguardPeer',
            fields=[
                ('id', api.models.uuid.UUIDField(default=api.models.uuid.gen_uuid, editable=False, max_length=8, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(default='wg0-peer', max_length=32, verbose_name='Interface Name')),
                ('address', models.CharField(default='10.13.13.0/24', max_length=128, verbose_name='Server address/subnet')),
                ('port', models.IntegerField(default=51820, verbose_name='Listen Port')),
                ('private_key', models.CharField(blank=True, default=None, max_length=128, null=True, verbose_name='Private Key')),
                ('public_key', models.CharField(blank=True, default=None, max_length=128, null=True, verbose_name='Public Key')),
                ('allowed_ips', models.CharField(default='0.0.0.0/0', max_length=128, verbose_name='Allowed IPs')),
                ('keepalive', models.IntegerField(blank=True, null=True, verbose_name='Persistent Keepalive')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WireguardSettings',
            fields=[
                ('id', api.models.uuid.UUIDField(default=api.models.uuid.gen_uuid, editable=False, max_length=8, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(default='wg0', max_length=32, verbose_name='Interface Name')),
                ('address', models.CharField(default='10.13.13.0/24', max_length=128, verbose_name='Server address/subnet')),
                ('port', models.IntegerField(default=51820, verbose_name='Listen Port')),
                ('private_key', models.CharField(blank=True, default=None, max_length=128, null=True, verbose_name='Private Key')),
                ('public_key', models.CharField(blank=True, default=None, max_length=128, null=True, verbose_name='Public Key')),
                ('dns1', models.GenericIPAddressField(blank=True, default='1.1.1.1', null=True, verbose_name='Primary DNS')),
                ('dns2', models.GenericIPAddressField(blank=True, null=True, verbose_name='Secondary DNS')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WireguardUser',
            fields=[
                ('id', api.models.uuid.UUIDField(default=api.models.uuid.gen_uuid, editable=False, max_length=8, primary_key=True, serialize=False, unique=True)),
                ('address', models.CharField(default='10.13.13.0/24', max_length=128, verbose_name='Server address/subnet')),
                ('port', models.IntegerField(default=51820, verbose_name='Listen Port')),
                ('private_key', models.CharField(blank=True, default=None, max_length=128, null=True, verbose_name='Private Key')),
                ('public_key', models.CharField(blank=True, default=None, max_length=128, null=True, verbose_name='Public Key')),
                ('allowed_ips', models.CharField(default='0.0.0.0/0', max_length=128, verbose_name='Allowed IPs')),
                ('keepalive', models.IntegerField(blank=True, null=True, verbose_name='Persistent Keepalive')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wireguard', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('id', api.models.uuid.UUIDField(default=api.models.uuid.gen_uuid, editable=False, max_length=8, primary_key=True, serialize=False, unique=True)),
                ('theme', models.CharField(choices=[('dark', 'Dark'), ('light', 'Light')], default='dark', max_length=8, verbose_name='Color Theme')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='usersettings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RunPython(create_settings, delete_settings),
    ]
