# Generated by Django 3.1.5 on 2021-01-24 21:04
'''
import api.models.uuid
from django.conf import settings
from django.db import migrations, models
import django.utils.timezone


def create_profiles(apps, schema_editor):
    """
    Creates a profile for every existing user.
    Any models referenced muse by through apps.get_model(APP<str>, MODEL<str>)
    If you import the models directly, you'll get the wrong version and the migration will fail.

    @param apps The installed apps this migration references
    @param schema_editor The current schema this migration references
    """
    MyAppProfile = apps.get_model("myapp", "MyAppProfile")
    User = apps.get_model("api", "User")

    users = User.objects.all()
    profiles = []
    for user in users:
        profiles.append(MyAppProfile(user=user))

    db_alias = schema_editor.connection.alias
    MyAppProfile.objects.using(db_alias).bulk_create(profiles)


def delete_profiles():
    """
    This function doesn't need to do anything, since reversing this migration would drop the table.
    """
    pass
'''
"""

class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PollQuestion',
            fields=[
                ('id', api.models.uuid.UUIDField(default=api.models.uuid.gen_uuid, editable=False, max_length=8, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=128, verbose_name='Title')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('modified', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Modified At')),
                ('deleted', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Deleted At')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'poll question',
                'verbose_name_plural': 'poll questions',
            },
        ),
        migrations.CreateModel(
            name='PollAnswer',
            fields=[
                ('id', api.models.uuid.UUIDField(default=api.models.uuid.gen_uuid, editable=False, max_length=8, primary_key=True, serialize=False, unique=True)),
                ('content', models.CharField(max_length=128, verbose_name='Content')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('modified', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Modified At')),
                ('deleted', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Deleted At')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.pollquestion')),
            ],
            options={
                'verbose_name': 'poll answer',
                'verbose_name_plural': 'poll answers',
            },
        ),
        migrations.CreateModel(
            name='MyAppProfile',
            fields=[
                ('id', api.models.uuid.UUIDField(default=api.models.uuid.gen_uuid, editable=False, max_length=8, primary_key=True, serialize=False, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='myapp_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        # Create profile for each existing user
        migrations.RunPython(create_profiles, delete_profiles),
    ]
"""